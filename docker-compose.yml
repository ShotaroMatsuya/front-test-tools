version: '3.8'
services:
  front:
    build:
      context: ./app
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
    ports:
      - '3000:3000'
    volumes:
      # ローカルにバインドマウントしたくない場合
      # - /app/node_modules
      # ローカルにバインドマウントしたい場合
      - ./app/node_modules:/app/node_modules
      - ./app:/app
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
    ports:
      - '3030:3030'
    volumes:
      - ./server/node_modules:/app/node_modules
      - ./server:/app
    depends_on:
      - front

  npm:
    build:
      context: ./cypress-api-request
      dockerfile: Dockerfile
    working_dir: /app
    entrypoint: ['npm']
    volumes:
      - ./cypress-api-request:/app
      # ローカルにバインドマウントしたくない場合
      # - /app/node_modules
      # ローカルにバインドマウントしたい場合
      - ./cypress-api-request/node_modules:/app/node_modules

  # create-react-app
  create-react-app:
    image: node:16
    working_dir: /
    entrypoint: 'npx create-react-app app'
    volumes:
      - ./app:/app

  # First React App(Cypress)
  first-react:
    build:
      context: ./cypress-api-request
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    entrypoint: 'npm run start:frontend'
    volumes:
      - ./cypress-api-request:/app
      - ./cypress-api-request/node_modules:/app/node_modules
    depends_on:
      - first-server
  first-server:
    build:
      context: ./cypress-api-request
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    entrypoint: 'npm run start:server'
    volumes:
      - ./cypress-api-request:/app
      - ./cypress-api-request/node_modules:/app/node_modules

  e2e:
    image: cypress
    build: ./e2e
    container_name: cypress
    depends_on:
      - first-react
    working_dir: /app
    network_mode: host
    environment:
      - CYPRESS_baseUrl=http://localhost:3000
    entrypoint: 'CYPRESS_CACHE_FOLDER=./tmp/Cypress npx cypress run'
    volumes:
      - ./e2e:/app
  jenkins:
    container_name: jenkins
    build:
      context: ./jenkins
      network: host
    ports:
      - 8080:8080
      - 50000:50000
    volumes:
      - ./jenkins:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
